# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-02-05 19:28
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=300, unique=True, verbose_name='Название')),
                ('ps_id', models.CharField(db_index=True, max_length=300, verbose_name='Уникальный идентификатор')),
                ('release_date', models.DateField(db_index=True, null=True, verbose_name='Дата рализа')),
                ('rating_score', models.FloatField(db_index=True, default=0, null=True, verbose_name='Рейтинг')),
                ('rating_people', models.IntegerField(db_index=True, default=0, null=True, verbose_name='Людей проголосовало')),
                ('page', models.CharField(max_length=300, verbose_name='Страница игры в ps store')),
                ('logo', models.CharField(max_length=300, verbose_name='Лого игры')),
            ],
        ),
        migrations.CreateModel(
            name='GameContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Тип игры')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, unique=True, verbose_name='Жанр игры')),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_non_plus_user', models.IntegerField(db_index=True, null=True, verbose_name='Цена для всех')),
                ('price_plus_user', models.IntegerField(db_index=True, null=True, verbose_name='Цена для ps plus')),
                ('date', models.DateField(auto_now_add=True, db_index=True, verbose_name='Дата сохранения цены')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Game', verbose_name='Игра')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='game.GameContentType', verbose_name='Тип игры'),
        ),
        migrations.AddField(
            model_name='game',
            name='genres',
            field=models.ManyToManyField(db_index=True, to='game.Genre', verbose_name='Жанр игры'),
        ),
        migrations.AddField(
            model_name='game',
            name='platforms',
            field=models.ManyToManyField(db_index=True, to='game.Platform', verbose_name='Платформы'),
        ),
        migrations.AlterIndexTogether(
            name='game',
            index_together=set([('release_date', 'rating_score'), ('release_date', 'rating_score', 'rating_people'), ('name', 'release_date', 'rating_score', 'rating_people')]),
        ),
    ]
